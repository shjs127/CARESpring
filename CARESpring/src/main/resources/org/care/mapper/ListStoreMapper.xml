<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.care.mapper.ListStoreMapper">

<select id="read" resultType="org.care.domain.StoreInfo">
	select *
	from storeinfo
	where storeno = #{storeNo}
</select>

<select id="listAll" resultType="org.care.domain.StoreInfo">
<![CDATA[
	select storeno, storename, storepic, address
	from storeinfo
	where storeno > 0
	order by storeno desc
]]>
</select>

<select id="listPage" resultType="org.care.domain.StoreInfo">
<![CDATA[
select storeno, storename, storepic, address 
from (select rownum as rnum, storeinfo.* 
from storeinfo 
order by storeno desc) storeinfo 
where rnum between #{page} and #{page+10} 
]]>
</select>

<select id="listCriteria" resultType="org.care.domain.StoreInfo">
<![CDATA[
	select storeno, storename, storepic, address 
	from (select rownum as rnum, storeinfo.*
	from storeinfo
	order by storeno desc) storeinfo 
	where rnum between #{pageStart} and #{pageEnd} 
]]>
</select>

<select id="countPaging" resultType="int">
<![CDATA[
	select count(storeno) 
	from storeinfo 
	where storeno > 0 
]]>
</select>

<sql id="search">
	<if test="searchKeyword != null">
		and storeinfo.storename like '%'||#{searchKeyword}||'%'
		or storeinfo.address like '%'||#{searchKeyword}||'%'
	</if>
</sql>

<select id="listSearch" resultType="org.care.domain.StoreInfo">
<![CDATA[
	select storeinfo.* 
	from (select rownum as rnum, storeinfo.* 
		  from storeinfo 
		  where storeno > 0 
		  order by storeno desc) storeinfo 
]]>
	<include refid="search"></include>
<![CDATA[
	and rnum between #{pageStart} and #{perPageNum} 
]]>
</select>

<select id="listSearchCount" resultType="int">
<![CDATA[
	select count(storeno)
	from (select rownum as rnum, storeinfo.* 
		  from storeinfo 
		  where storeno > 0 
		  order by storeno desc) storeinfo
]]>
	<include refid="search"></include>
</select>

<!-- <select id="selectStoreList" resultType="org.care.domain.StoreInfo"> -->
<!-- 	select storeno, storename, storepic, address -->
<!-- 	from storeinfo -->
<!-- 	order by storeno desc -->
<!-- </select> -->
<select resultType="org.care.dto.StoreDTO" id="topList">

<![CDATA[
		select r.storeno storeNo, r.aa storeAvg, s.storename storeName from 
		(select storeNo , AVG(avgScore) as aa from reviewInfo
		group by storeNo order by aa DESC,storeNo DESC) r, storeInfo s
		where r.storeno = s.storeNo and ROWNUM < 7
		
		]]>
</select>

<select id="reviewTop" resultType="org.care.dto.StoreDTO">

<![CDATA[
		SELECT A.* FROM (SELECT A.*, ROWNUM AS RNUM FROM (
					SELECT A.* FROM ( SELECT A.*, (SELECT COUNT(1) FROM REVIEWINFO R 
					WHERE A.STORENO = R.STORENO GROUP BY R.STORENO) AS REVIEWCOUNT FROM STOREINFO A ) A 
					WHERE NOT REVIEWCOUNT IS NULL ORDER BY REVIEWCOUNT DESC ) A ) A WHERE RNUM BETWEEN 1 AND 6
		
		]]>
</select>
</mapper>
